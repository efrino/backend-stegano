"""Add status, transaction_id, payment_type to Receipt and update Artwork is_sold

Revision ID: 36b07c88590a
Revises: 2d207efbb69b
Create Date: 2025-07-29 14:45:06.751297

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '36b07c88590a'
down_revision: Union[str, None] = '2d207efbb69b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('purchases')
    op.drop_table('receipts')
    op.drop_table('likes')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('likes',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('artwork_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['artwork_id'], ['artworks.id'], name='likes_artwork_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='likes_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='likes_pkey')
    )
    op.create_table('receipts',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('buyer_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('artwork_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('purchase_date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('buyer_secret_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('order_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('payment_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('pending', 'paid', 'failed', 'cancelled', 'expired', name='receipt_status_enum'), server_default=sa.text("'pending'::receipt_status_enum"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['artwork_id'], ['artworks.id'], name='receipts_artwork_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], name='receipts_buyer_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='receipts_pkey')
    )
    op.create_table('purchases',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('artwork_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['artwork_id'], ['artworks.id'], name='purchases_artwork_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='purchases_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'artwork_id', name='purchases_pkey')
    )
    # ### end Alembic commands ###
